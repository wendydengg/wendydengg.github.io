<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://wendydengg.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://wendydengg.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-12-06T20:16:23+00:00</updated><id>https://wendydengg.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Fabrication Workshop</title><link href="https://wendydengg.github.io/blog/2024/fabrication-workshop-copy/" rel="alternate" type="text/html" title="Fabrication Workshop"/><published>2024-12-06T00:32:13+00:00</published><updated>2024-12-06T00:32:13+00:00</updated><id>https://wendydengg.github.io/blog/2024/fabrication-workshop%20copy</id><content type="html" xml:base="https://wendydengg.github.io/blog/2024/fabrication-workshop-copy/"><![CDATA[<p>Over the past two weeks, we brainstormed on ways to represent data in the Umpire through a laser cutter.</p> <h2 id="brainstorm-sessions">Brainstorm Sessions</h2> <p>Given the mass amount of data regarding the Umpire, it is difficult to determine a concise definition and meaning by first glance. Since each entry in our dataset is categorized by topics such as baseball, ESP league, and religion, we analyzed each topic in depth and decided to focus on religion because we were interested in ways that prisoners remained hopeful during times of loneliness and despair. Another reason is that we already know baseball is a recurring theme in the Umpire, so we wanted to bring a new perspective. Thus, our goal was to use a laser cutter to create a physical, tangible representation of religion in the Umpire. The resulting product was a histogram of the frequency of religious words in the Umpire sitting on top of a birds’ eye view of the ESP, the corresponding words for the frequencies were also inscribed onto the histogram.</p> <h2 id="design-and-implementation-of-project">Design and Implementation of Project</h2> <p>We met multiple times in the EC and Zoom to discuss and complete this project, and everyone was able to contribute meaningfully to each session due to the role specifications. One of our initial ideas was to create a word cloud out of the frequencies of religious words mentioned in the Umpire, but the resulting prototyped image ended up being too crowded and not aesthetically appealing, not to mention that it would be vert difficult for the laser cutter to replicate such a vision. By iterating through ideas and prototypes and discussing pros and cons of each, we narrowed our final idea down to having a histogram with each bar engraved with its corresponding word related to religion.</p> <p>The acrylic material for the histogram had a reflective finish, so we had another idea to print a poem witten in the ESP as the base of the histogram – a symbol that religious beliefs create a stable foundation for the inmates. However, laser cutting words would again be difficult to achieve, so we ultimately decided to etch a map of the ESP as the base of the histogram to symbolize that the historical information we used emerged from the grounds of the prison.</p> <p>During the presentation, we asked our viewers to be able to see their face reflected in the histogram on the other side of where the words were engraved so that the color-changing property of our acrylic material reflects the dynamism of faith itself.</p> <h2 id="digital-asset-manager">Digital Asset Manager</h2> <p>As the Digital Asset Manager, I was present in all meetings in order to provide data analysis. For example, I wrote the code for counting the number of religion-related words using regex, and I also generated the word cloud and histogram.</p> <p><img src="assets/img/word_cloud.png" alt="Word Cloud"/><br/> <img src="assets/img/histogram.png" alt="Histogram"/></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">re</span>
<span class="kn">import</span> <span class="n">nltk</span>
<span class="kn">from</span> <span class="n">nltk.corpus</span> <span class="kn">import</span> <span class="n">stopwords</span>
<span class="kn">from</span> <span class="n">wordcloud</span> <span class="kn">import</span> <span class="n">WordCloud</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="n">collections</span> <span class="kn">import</span> <span class="n">Counter</span>

<span class="n">nltk</span><span class="p">.</span><span class="nf">download</span><span class="p">(</span><span class="sh">'</span><span class="s">stopwords</span><span class="sh">'</span><span class="p">)</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">data.csv</span><span class="sh">'</span><span class="p">)</span>
<span class="n">all_text</span> <span class="o">=</span> <span class="sh">'</span><span class="s"> </span><span class="sh">'</span><span class="p">.</span><span class="nf">join</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="sh">'</span><span class="s">text</span><span class="sh">'</span><span class="p">].</span><span class="nf">dropna</span><span class="p">())</span>

<span class="n">words</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nf">findall</span><span class="p">(</span><span class="sa">r</span><span class="sh">'</span><span class="s">\b[a-zA-Z]+\b</span><span class="sh">'</span><span class="p">,</span> <span class="n">all_text</span><span class="p">.</span><span class="nf">lower</span><span class="p">())</span>

<span class="n">stop_words</span> <span class="o">=</span> <span class="nf">set</span><span class="p">(</span><span class="n">stopwords</span><span class="p">.</span><span class="nf">words</span><span class="p">(</span><span class="sh">'</span><span class="s">english</span><span class="sh">'</span><span class="p">))</span>
<span class="n">filtered_words</span> <span class="o">=</span> <span class="p">[</span><span class="n">word</span> <span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">words</span> <span class="k">if</span> <span class="n">word</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">stop_words</span><span class="p">]</span>

<span class="n">religion_pattern</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nf">compile</span><span class="p">(</span><span class="sa">r</span><span class="sh">'</span><span class="s">\b(god|faith|church|bible|prayer|spiritual|religion|holy|worship|christian|muslim|islam|hindu|buddhist|jewish|temple|synagogue|mosque|sacred|divine|belief|ritual|soul|heaven|hell|angel|sin)\b</span><span class="sh">'</span><span class="p">)</span>

<span class="n">religion_words</span> <span class="o">=</span> <span class="p">[</span><span class="n">word</span> <span class="k">for</span> <span class="n">word</span> <span class="ow">in</span> <span class="n">filtered_words</span> <span class="k">if</span> <span class="n">religion_pattern</span><span class="p">.</span><span class="nf">search</span><span class="p">(</span><span class="n">word</span><span class="p">)]</span>

<span class="n">word_counts</span> <span class="o">=</span> <span class="nc">Counter</span><span class="p">(</span><span class="n">religion_words</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Religion-Related Words and Their Frequencies:</span><span class="sh">"</span><span class="p">)</span>
<span class="k">for</span> <span class="n">word</span><span class="p">,</span> <span class="n">frequency</span> <span class="ow">in</span> <span class="n">word_counts</span><span class="p">.</span><span class="nf">items</span><span class="p">():</span>
    <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">word</span><span class="si">}</span><span class="s">: </span><span class="si">{</span><span class="n">frequency</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>

<span class="n">wordcloud</span> <span class="o">=</span> <span class="nc">WordCloud</span><span class="p">(</span><span class="n">width</span><span class="o">=</span><span class="mi">800</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">400</span><span class="p">,</span> <span class="n">background_color</span><span class="o">=</span><span class="sh">'</span><span class="s">white</span><span class="sh">'</span><span class="p">).</span><span class="nf">generate_from_frequencies</span><span class="p">(</span><span class="n">word_counts</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="n">wordcloud</span><span class="p">,</span> <span class="n">interpolation</span><span class="o">=</span><span class="sh">'</span><span class="s">bilinear</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">axis</span><span class="p">(</span><span class="sh">'</span><span class="s">off</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sh">"</span><span class="s">Religion-Related Word Cloud</span><span class="sh">"</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">words</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">Repent</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Forgive</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Faith</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Devotion</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Remorse</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">God</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Sin</span><span class="sh">'</span><span class="p">]</span>
<span class="n">frequencies</span> <span class="o">=</span> <span class="p">[</span><span class="mi">12</span><span class="p">,</span> <span class="mi">42</span><span class="p">,</span> <span class="mi">153</span><span class="p">,</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">130</span><span class="p">,</span> <span class="mi">60</span><span class="p">]</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">6</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">bar</span><span class="p">(</span><span class="n">words</span><span class="p">,</span> <span class="n">frequencies</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">skyblue</span><span class="sh">'</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sh">'</span><span class="s">Frequency of Religion-Related Words</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Words</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Frequency</span><span class="sh">'</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="Digital"/><category term="Humanities"/><summary type="html"><![CDATA[Reflection on visualizing history using a laser cutter]]></summary></entry><entry><title type="html">Web-Scraping Workshop</title><link href="https://wendydengg.github.io/blog/2024/web-scraping-workshop/" rel="alternate" type="text/html" title="Web-Scraping Workshop"/><published>2024-09-24T00:32:13+00:00</published><updated>2024-09-24T00:32:13+00:00</updated><id>https://wendydengg.github.io/blog/2024/web-scraping-workshop</id><content type="html" xml:base="https://wendydengg.github.io/blog/2024/web-scraping-workshop/"><![CDATA[<p>Web scraping is a common tool used to quickly and efficiently extract large amounts of data from websites. I attended the Introduction to Web Scraping Workshop by Stephen Hall, a Computer Science librarian at the Research Data &amp; Digital Scholarship (RDDS) Exchange at Van Pelt, introduced us to the Python package BeautifulSoup and some precautions to keep in mind before doing any web-scraping on the website.</p> <h2 id="before-web-scraping">Before Web-Scraping</h2> <p>He started off the presentation by reminding us of the dangers and precautions to keep in mind when doing web-scraping. Specifically, we need to check the terms and services file to see if the owner of the site permits web-scraping. If that is not available, we can inspect the site’s robots.txt file (which is meant to be machine-readable but can also be checked by humans) that tells web crawlers what their permissions are. For example, the New York Times does not allow web-scraping of any of their articles. Web-scraping in itself is not an illegal task, but if done so without the permission of the site owners, it is possible to get into a lot of legal troubles. This is especially an issue when web-scraping is done illegally and dangerously for users with bad intentions as they can introduce a lot of problems to the site owners. For instance, university resources are not allowed to be scrapped because vendors of the universities monitor their sites and will ban the university’s IP address if suspicious activities are found. The bottom line is that if you are unsure about the permissions of a site, don’t perform web-scraping. Below is a list of other key considerations when performing web-scraping:</p> <ul> <li>Had the owner made it publicly and freely available? (if it is behind a paywall, then no)</li> <li>An account is not required to access the data</li> <li>The website should not block scrapers</li> <li>Issues of copyright infringement and plagiarism</li> <li>How are we using the data?</li> <li>Does it have an API? Cuz we should use that instead</li> <li>Most of the sites we wanna scrape… we can’t</li> <li>Penn has an intellectual property manager to handle these types of issues</li> </ul> <h2 id="technical-details">Technical Details</h2> <p>As for the technical details, web-scraping is simply a form of regular expression matching. Regular expressions are a sequence of characters that specifies a pattern to search for in text. It is the backbone of most “find and replace” algorithms, including Ctrl-F. We then performed some simple regex queries over a toy website called https://books.toscrape.com. Below are some examples of regex matching syntax:</p> <ul> <li>‘<em>’ looks for preceding character 0 or more times ab</em>c (a and c with any number of b in b/t)</li> <li>’+’ looks for preceding character 1 or more times ab*c (a and c with at least one b in b/t)</li> <li>’.’ wildcard character a.c (a and c with any single character in b/t)</li> <li>’?’ preceding character may or may not be present in string docx (doc and docx)</li> <li>‘\d’ matches any digit character</li> <li>‘\s’ matches any whitespace character</li> <li>‘[…]{#}’ matches any character in a range, with # number of characters back-to-back</li> <li>‘[A-Za-z0-9]’ any character between A to Z, any b/t a to z, any b/t 0 to 9</li> <li>’()’ sub-catch returns only stuff in that parenthesis, but need to specify which group # in group(#)</li> </ul> <h2 id="digital-humanities-application">Digital Humanities Application</h2> <p>I can see this skill being extremely useful for digital humanities projects, where the historical data is scattered around the web and requires manual checking of the text to ensure validity. For example, if we want to find more data regarding inmates in the Eastern State Penitentiary (ESP), which is sparsely available, we can perform web-scraping over websites that contain all possible information about inmates in Philadelphia and narrow down to those who lived in the ESP. Thank you to the RDDS team at Van Pelt!</p>]]></content><author><name></name></author><category term="Digital"/><category term="Humanities"/><summary type="html"><![CDATA[Summary of an Introduction to Web Scraping Workshop at the Research Data & Digital Scholarship (RDDS) Exchange at Van Pelt]]></summary></entry></feed>